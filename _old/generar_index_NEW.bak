# generar_index_NEW.py
import os, json, csv
from datetime import date, timedelta

HERE = os.path.dirname(__file__)
CSV_TURNOS = os.path.join(HERE, "turnos_mes.csv")
CSV_SUSTS  = os.path.join(HERE, "sustituciones_diagnostico.csv")
TPL        = os.path.join(HERE, "live.html")
OUT        = os.path.join(HERE, "index.html")

if not os.path.exists(TPL):
    raise SystemExit("ERROR: falta live.html (plantilla).")
if not os.path.exists(CSV_TURNOS):
    raise SystemExit("ERROR: falta turnos_mes.csv. Ejecuta exportar_turnos_desde_excel.py.")

rows = []
with open(CSV_TURNOS, encoding="utf-8") as f:
    r = csv.DictReader(f)
    for row in r:
        rows.append({
            "Hotel": row.get("Hotel",""),
            "Fecha": row.get("Fecha",""),
            "Empleado": row.get("Empleado",""),
            "TurnoLargo": row.get("Turno",""),
            "Icono": "",
            "Sustituto": "",
            "SustitucionPor": ""
        })

if os.path.exists(CSV_SUSTS):
    idx = {(x["Fecha"], x["Empleado"]): x for x in rows}
    with open(CSV_SUSTS, encoding="utf-8") as f:
        r = csv.DictReader(f)
        for s in r:
            k = (s.get("Fecha",""), s.get("Empleado",""))
            if k in idx:
                rows_obj = idx[k]
                rows_obj["Sustituto"] = s.get("Sustituto","")
                rows_obj["SustitucionPor"] = s.get("SustitucionPor","")

today = date.today()
DATA = {
    "rows": rows,
    "defaultDesde": today.isoformat(),
    "defaultHasta": (today + timedelta(days=30)).isoformat()
}

html = open(TPL, "r", encoding="utf-8").read()
if "__DATA_PLACEHOLDER__" not in html:
    # Garantiza placeholder si alguien pegó datos previamente
    html = html.replace("const DATA = {", "const DATA = __DATA_PLACEHOLDER__ /*")
    html = html.replace("};", "*/ ;")

html = html.replace("__DATA_PLACEHOLDER__", json.dumps(DATA, ensure_ascii=False))
with open(OUT, "w", encoding="utf-8") as f:
    f.write(html)

c = sum(1 for x in rows if x["Fecha"])
fmin = min((x["Fecha"] for x in rows if x["Fecha"]), default="")
fmax = max((x["Fecha"] for x in rows if x["Fecha"]), default="")
print(f"OK Generado index.html ({c} registros) Fechas: {fmin} -> {fmax}")


